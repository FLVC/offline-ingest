#!/usr/bin/env ruby

# This starts a worker process for ingesting a package listed on a
# resque queue name :ingest.  Multiple workers are created by invoking
# this script multiple times.  Normally we'll have a process-monitor
# such as god manage that startup.  See /etc/god.conf.

$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), '../lib'))

require 'rubygems'
require 'resque'
require 'mono_logger'
require 'watch-queue/utils'
require 'watch-queue/ingest-job'          # the actual handler corresponding to the 'ingest' queue specified below; the work happens here

SLEEP = 5

# MAIN

setup_resque_logger()

worker = nil

begin
  worker = Resque::Worker.new('ingest')
  worker.term_timeout = 4.0
  worker.term_child   = 1
  #  worker.run_at_exit_hooks = ....
rescue Resque::NoQueueError        # TODO: catch and report other errors? Let the god process monitor handle it?
  abort "no queue specified"
end

if Process.respond_to?('daemon')   # requires ruby >= 1.9"
  Process.daemon(true, true)
  worker.reconnect
end

worker.log  "Starting worker #{worker}"
worker.log  "Worker #{worker.pid} will wakeup every #{SLEEP} seconds"
worker.work  SLEEP
