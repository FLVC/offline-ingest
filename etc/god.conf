# -*- mode: ruby -*-

$LOAD_PATH.unshift "/usr/local/islandora/offline-ingest/lib"

require 'offin/utils'

GID  = 'ingestor'
UID  = 'ingestor'


# The associated ftp directories should be writable and readable by
# the above UID and GID.

CONFIG_FILENAME = "/usr/local/islandora/offline-ingest/config.yml"
SECONDARY_QUEUES = 3


# The incoming-package-handler program watches for incoming packages
# in the ftp directories configured in CONFIG_FILENAME. It moves
# completed ftp uploads to a special per-institution directory and
# adds a descriptor for those packages to the institution's
# queue. These queues are named after the site's namespace.

God.watch do |w|
  w.uid           = UID
  w.gid           = GID
  w.env           = { 'CONFIG_FILE' => CONFIG_FILENAME }
  w.name          = "incoming-package-handler"
  w.log_cmd       = "/bin/logger -t '#{w.name}' -p local1.info"
  w.start         = "/usr/local/islandora/offline-ingest/tools/incoming-package-handler"
  w.keepalive
end

# An ingest-handler ingests packages for one or more institutions. We
# start up a processe for each institution; each process will get a
# queue named after the institution's site_namespace. Processes will
# also have SECONDARY_QUEUES number of low-priority queuese. For
# instance, say we have institutions A, B, C, D, E and we set
# SECONDARY_QUEUES to be 3. We'll start 5 processes, each of which
# will service 3 queues:
#
#    A, B, C
#    B, C, D
#    C, D, E
#    D, E, A
#    E, A, B
#
# Each institution will be serviced by three processes, at priority
# levels 1, 2, and 3.

Utils.institutional_queue_groups(CONFIG_FILENAME, SECONDARY_QUEUES) do |queue_set|
  God.watch do |w|
    w.uid          = UID,
    w.gid          = GID,
    w.env          = { 'CONFIG_FILE' => CONFIG_FILENAME },
    w.name         = "ingest-handler-#{queue_set[0]}",
    w.group        = "ingest-handlers",
    w.log_cmd      = "/bin/logger -t '#{w.name}' -p local1.info",
    w.start        = "/usr/local/islandora/offline-ingest/tools/ingest-handler #{queue_set.join(' ')}",
    w.keepalive
  end
end
